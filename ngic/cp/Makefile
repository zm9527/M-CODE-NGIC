# Copyright (c) 2017 Intel Corporation
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#      http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

ifeq ($(RTE_SDK),)
$(error "Please define RTE_SDK environment variable")
endif

MAKEFLAGS += -j

# Default target, can be overriden by command line or environment
RTE_TARGET ?= x86_64-native-linuxapp-gcc

include $(RTE_SDK)/mk/rte.vars.mk
include $(NG_CORE)/config/ng-core_cfg.mk

# binary name
APP = ngic_controlplane

# all source are stored in SRCS-y

SRCS-y := main.c
SRCS-y += gtpv2c.c
SRCS-y += gtpv2c_set_ie.c
SRCS-y += debug_str.c
SRCS-y += ue.c
SRCS-y += cp_stats.c
SRCS-y += packet_filters.c

SRCS-y += gtpv2c_messages/bearer_resource_cmd.o
SRCS-y += gtpv2c_messages/create_bearer.o
SRCS-y += gtpv2c_messages/create_session.o
SRCS-y += gtpv2c_messages/create_s5s8_session.o
SRCS-y += gtpv2c_messages/delete_bearer.o
SRCS-y += gtpv2c_messages/delete_session.o
SRCS-y += gtpv2c_messages/delete_s5s8_session.o
SRCS-y += gtpv2c_messages/echo.o
SRCS-y += gtpv2c_messages/modify_bearer.o
SRCS-y += gtpv2c_messages/downlink_data_notification.o
SRCS-y += gtpv2c_messages/release_access_bearer.o

SRCS-y += $(SRCDIR)/../interface/ipc/dp_ipc_api.o
SRCS-y += $(SRCDIR)/../interface/interface.o
SRCS-y += $(SRCDIR)/../interface/udp/vepc_udp.o

SRCS-y += $(SRCDIR)/../cp_dp_api/vepc_cp_dp_api.o


CFLAGS += -Wno-psabi # suppress "The ABI for passing parameters with 64-byte alignment has changed in GCC 4.6"
CFLAGS += -Werror

CFLAGS += -I$(SRCDIR)/../cp
CFLAGS += -I$(SRCDIR)/../dp
CFLAGS += -I$(SRCDIR)/../dp/pipeline
CFLAGS += -I$(SRCDIR)/../cp_dp_api
CFLAGS += -I$(SRCDIR)/../interface
CFLAGS += -I$(SRCDIR)/../interface/ipc
CFLAGS += -I$(SRCDIR)/../interface/udp
CFLAGS += -I$(SRCDIR)/../interface/sdn
CFLAGS += -I$(SRCDIR)/../interface/zmq

CFLAGS += -g -DCP_BUILD
#For SDN NB interface enable SDN_ODL_BUILD OR SDN_ONOS_BUILD not both
ifneq (,$(findstring SDN_ODL_BUILD, $(CFLAGS)))
	SRCS-y += nb.c
	LDLIBS += -ljson-c
	LDLIBS += -lcurl
endif

#Enable '-E' option to debug preprocessor output
#CFLAGS += -E

#Enable'-g -O0' option for gdb
CFLAGS += -O3
#CFLAGS += -g -O0

CFLAGS += $(WERROR_FLAGS)
CFLAGS_config.o := -D_GNU_SOURCE

LDLIBS += -lpcap

# workaround for a gcc bug with noreturn attribute
#  http://gcc.gnu.org/bugzilla/show_bug.cgi?id=12603
ifeq ($(CONFIG_RTE_TOOLCHAIN_GCC),y)
CFLAGS_controlplane.o += -Wno-return-type
endif

include $(RTE_SDK)/mk/rte.extapp.mk

